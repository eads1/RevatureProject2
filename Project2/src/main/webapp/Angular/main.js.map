{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/logged-in.guard.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/landing/landing.component.css","webpack:///./src/app/landing/landing.component.html","webpack:///./src/app/landing/landing.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/commentdata.class.ts","webpack:///./src/app/models/imagedata.class.ts","webpack:///./src/app/models/postdata.class.ts","webpack:///./src/app/models/userdata.class.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/notfound/notfound.component.css","webpack:///./src/app/notfound/notfound.component.html","webpack:///./src/app/notfound/notfound.component.ts","webpack:///./src/app/otherprofile/otherprofile.component.css","webpack:///./src/app/otherprofile/otherprofile.component.html","webpack:///./src/app/otherprofile/otherprofile.component.ts","webpack:///./src/app/password/password.component.css","webpack:///./src/app/password/password.component.html","webpack:///./src/app/password/password.component.ts","webpack:///./src/app/post/like.service.ts","webpack:///./src/app/post/post.component.css","webpack:///./src/app/post/post.component.html","webpack:///./src/app/post/post.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/search/search.component.css","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/shared/comment.service.ts","webpack:///./src/app/shared/commentList.service.ts","webpack:///./src/app/shared/post.service.ts","webpack:///./src/app/shared/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".wrapper {\\r\\n    padding-top: 75px;\\r\\n    height: 100vh;\\r\\n}\\r\\nrouter-outlet {\\r\\n    height: 100%;\\r\\n}\\r\\n\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<div class=\\\"wrapper\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { UserService } from './shared/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n\r\n  constructor(private user: UserService) { }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { VirtualScrollModule } from 'angular2-virtual-scroll';\r\n\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { PasswordComponent } from './password/password.component';\r\nimport { PostComponent } from './post/post.component';\r\n\r\nimport { UserService } from './shared/user.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NotfoundComponent } from './notfound/notfound.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { LoggedInGuard } from './guards/logged-in.guard';\r\nimport { CommentList } from './shared/commentList.service';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { PostService } from './shared/post.service';\r\n\r\nimport { CommentService } from './shared/comment.service';\r\nimport { LandingComponent } from './landing/landing.component';\r\nimport { OtherprofileComponent } from './otherprofile/otherprofile.component';\r\nimport { SearchComponent } from './search/search.component';\r\n\r\nconst routes: Routes = [\r\n  {path: 'register', component: RegisterComponent, canActivate: [LoggedInGuard]},\r\n  {path: 'profile', component: ProfileComponent},\r\n  {path: 'reset', component: PasswordComponent},\r\n  {path: 'other/:userId', component: OtherprofileComponent},\r\n  {path: 'search/:searchText', component: SearchComponent},\r\n  {path: '', component: LandingComponent},\r\n  {path: '**', component: NotfoundComponent, canActivate: [AuthGuard]},\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    NavbarComponent,\r\n    PostComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    PasswordComponent,\r\n    NotfoundComponent,\r\n    LandingComponent,\r\n    OtherprofileComponent,\r\n    SearchComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule, FormsModule, HttpClientModule, RouterModule.forRoot(routes), VirtualScrollModule,\r\n  ],\r\n  providers: [\r\n    PostService,\r\n    CommentList,\r\n    NotfoundComponent,\r\n    UserService,\r\n    CookieService,\r\n    HttpClient,\r\n    CommentService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { UserService } from '../shared/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private user: UserService, private router: Router) { }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    return this.user.isLoggedIn;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { UserService } from '../shared/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoggedInGuard implements CanActivate {\r\n  constructor(private user: UserService, private router: Router) { }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    return !this.user.isLoggedIn;\r\n  }\r\n}\r\n","module.exports = \".card {\\r\\n    max-width: 45rem;\\r\\n    height: 90vh;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n#post {\\r\\n    resize: none;\\r\\n}\\r\\n#form-signin {\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\nvirtual-scroll {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\napp-post {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n}\\r\\n.total-padding {\\r\\n    height: 1000px;\\r\\n}\\r\\n::-webkit-scrollbar { \\r\\n    display: none; \\r\\n}\"","module.exports = \"<div class=\\\"container card border-light mb-3\\\">\\r\\n  <div class='card-header'>\\r\\n  <form id=\\\"form-signin\\\" class=\\\"form-signin\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n      <div class=\\\"form-label-group\\\">\\r\\n          <textarea id=\\\"post\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"post\\\"\\r\\n            name=\\\"post\\\" placeholder=\\\"create post\\\"></textarea>\\r\\n      </div><br/>\\r\\n      <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Submit</button>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <virtual-scroll [items]=\\\"userPosts\\\" [bufferAmount]=\\\"5\\\" [childHeight]=\\\"85\\\"\\r\\n        (update)=\\\"viewPortItems = $event\\\">\\r\\n      <app-post *ngFor=\\\"let userPost of viewPortItems\\\" [userPost]=\\\"userPost\\\">\\r\\n      </app-post>\\r\\n    </virtual-scroll>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { PostService } from '../shared/post.service';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { PostObject } from '../shared/post';\r\nimport { ChangeEvent } from 'angular2-virtual-scroll';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  private post: string;\r\n  private email = this.cookies.get('email');\r\n  private uid = this.cookies.get('userId');\r\n  private userPosts: Array<PostObject>;\r\n  private viewPortItems: Array<PostObject>;\r\n  constructor(private postService: PostService, private router: Router, private cookies: CookieService) {\r\n    this.userPosts = new Array<PostObject>();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.post = '';\r\n    this.postService.getAllPostInfo().subscribe((response: any) => {\r\n      this.userPosts = response;\r\n      this.viewPortItems = response;\r\n      console.log( this.userPosts);\r\n    });\r\n  }\r\n  submit() {\r\n    console.log(this.email);\r\n    this.postService.submitPost(this.email, this.post).subscribe(response => {\r\n      if (response['success']) {\r\n        this.ngOnInit();\r\n      } else {\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"user.isLoggedIn; else login\\\">\\r\\n  <app-home></app-home>\\r\\n</div>\\r\\n\\r\\n<ng-template #login>\\r\\n  <app-login></app-login>\\r\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../shared/user.service';\r\n\r\n@Component({\r\n  selector: 'app-landing',\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.css']\r\n})\r\nexport class LandingComponent implements OnInit {\r\n\r\n  constructor(private user: UserService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"  .card{\\r\\n    width: 400px;\\r\\n    margin: auto;\\r\\n  }\\r\\n  \\r\\n    .form-signin {\\r\\n      width: 100%;\\r\\n      padding: 15px;\\r\\n      height: 100%;\\r\\n      max-height:210px;\\r\\n    }\\r\\n  \\r\\n    .form-label-group {\\r\\n      position: relative;\\r\\n      margin-bottom: 1rem;\\r\\n    }\\r\\n  \\r\\n    .form-label-group > input,\\r\\n    .form-label-group > label {\\r\\n      padding: var(--input-padding-y) var(--input-padding-x);\\r\\n    }\\r\\n  \\r\\n    .form-label-group > label {\\r\\n      position: absolute;\\r\\n      top: 0;\\r\\n      left: 0;\\r\\n      display: block;\\r\\n      width: 100%;\\r\\n      margin-bottom: 0; /* Override default `<label>` margin */\\r\\n      line-height: 1.5;\\r\\n      color: #495057;\\r\\n      border: 1px solid transparent;\\r\\n      border-radius: .25rem;\\r\\n      transition: all .1s ease-in-out;\\r\\n    }\\r\\n  \\r\\n    .form-label-group input::-webkit-input-placeholder {\\r\\n      color: transparent;\\r\\n    }\\r\\n  \\r\\n    .form-label-group input:-ms-input-placeholder {\\r\\n      color: transparent;\\r\\n    }\\r\\n  \\r\\n    .form-label-group input::-ms-input-placeholder {\\r\\n      color: transparent;\\r\\n    }\\r\\n  \\r\\n    .form-label-group input::placeholder {\\r\\n      color: transparent;\\r\\n    }\\r\\n  \\r\\n    .form-label-group input:not(:placeholder-shown) {\\r\\n      padding-top: calc(var(--input-padding-y) + var(--input-padding-y) * (2 / 3));\\r\\n      padding-bottom: calc(var(--input-padding-y) / 3);\\r\\n    }\\r\\n  \\r\\n    .form-label-group input:not(:placeholder-shown) ~ label {\\r\\n      padding-top: calc(var(--input-padding-y) / 3);\\r\\n      padding-bottom: calc(var(--input-padding-y) / 3);\\r\\n      font-size: 12px;\\r\\n      color: #777;\\r\\n    }\\r\\n  \"","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header text-white bg-primary\\\" style=\\\"padding-bottom: 0px\\\">\\r\\n    <h5>\\r\\n      <b>Login</b>\\r\\n    </h5>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <form class=\\\"form-signin\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n      <div class=\\\"form-label-group\\\">\\r\\n        <input type=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email address\\\" required autofocus [(ngModel)]=\\\"email\\\" name=\\\"email\\\"\\r\\n          [ngClass]=\\\"{'is-invalid': failed}\\\" (change)=\\\"changed()\\\">\\r\\n        <label [ngStyle]=\\\"labelStyles\\\" for=\\\"email\\\">Email address</label>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-label-group\\\">\\r\\n        <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required [(ngModel)]=\\\"password\\\" name=\\\"password\\\"\\r\\n          [ngClass]=\\\"{'is-invalid': failed}\\\" (change)=\\\"changed()\\\">\\r\\n        <label [ngStyle]=\\\"labelStyles\\\" for=\\\"password\\\">Password</label>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Login</button>\\r\\n    </form>\\r\\n    <div class=\\\"text-center\\\">\\r\\n      Don't have an account?\\r\\n      <a routerLink=\\\"/register\\\">Register</a>\\r\\n    </div>\\r\\n    <div class='text-center'>\\r\\n      Forgot your password? \\r\\n      <a routerLink='/reset'>Reset Password</a>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../shared/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  private email: string;\r\n  private password: string;\r\n  private failed = false;\r\n  private labelStyles;\r\n\r\n  constructor(private user: UserService, private router: Router, private cookies: CookieService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  submit() {\r\n    this.user.login(this.email, this.password).subscribe(response => {\r\n      console.log('login response');\r\n      console.log(response);\r\n      if (response) {\r\n        // console.log(response);\r\n        const user = {\r\n          userId: response['userId'],\r\n          firstName: response['fname'],\r\n          lastName: response['lname'],\r\n          email: response['email'],\r\n          picUrl: response['imageid'],\r\n        };\r\n        this.user.setLoggedIn(user);\r\n      } else {\r\n        this.failed = true;\r\n        this.labelStyles = { 'color': 'red' };\r\n      }\r\n    });\r\n  }\r\n\r\n  changed() {\r\n    this.failed = false;\r\n    this.labelStyles = { 'color': 'grey' };\r\n  }\r\n}\r\n","import { PostData } from './postdata.class';\r\nimport { UserData } from './userdata.class';\r\n\r\nexport class CommentData {\r\n    commentId: number;\r\n    post: number;\r\n    user: UserData;\r\n    text: string;\r\n\r\n    constructor(commentId: number, post: number, user: UserData, text: string) {\r\n        this.commentId = commentId;\r\n        this.post = post;\r\n        this.user = user;\r\n        this.text = text;\r\n    }\r\n}\r\n","import { UserData } from './userdata.class';\r\n\r\nexport class ImageData {\r\n    imageId: number;\r\n    url: string;\r\n    user: UserData;\r\n\r\n    constructor(imageId: number, url: string, user: UserData) {\r\n        this.imageId = imageId;\r\n        this.url = url;\r\n        this.user = user;\r\n    }\r\n\r\n}\r\n","import { UserData } from './userdata.class';\r\nimport { CommentData } from './commentdata.class';\r\nimport { ImageData } from './imagedata.class';\r\n\r\n/*\r\n    This class exists solely to persist data after the observable moves on.\r\n*/\r\nexport class PostData {\r\n    postId: number;\r\n    content: string;\r\n    user: UserData;\r\n    comments: CommentData[] = new Array();\r\n    images: ImageData[] = new Array();\r\n    postedDate: string;\r\n\r\n    constructor(data) {\r\n        this.postId = data.postId;\r\n        this.content = data.content;\r\n        this.postedDate = data.postedDate;\r\n        this.user = new UserData(data.userId.userId, data.userId.fname, data.userId.lname,\r\n            data.userId.password, data.userId.imageid, data.userId.email);\r\n\r\n        // the this.user should update to the real owner in the future\r\n        // pulls comment data out of json response\r\n        for (let i = 0; i < data.comments.length; i++) {\r\n            this.comments.push(new CommentData(data.comments[i].commentId, 0,\r\n                this.user, data.comments[i].content));\r\n        }\r\n        // pulls image links out of json\r\n        for (let i = 0; i < data.imageList.length; i++) {\r\n            this.images.push(new ImageData(data.imageList[0].image_id,\r\n                data.imageList[i].link, this.user));\r\n        }\r\n    }\r\n\r\n}\r\n","export class UserData {\r\n    userId: number;\r\n    fname: string;\r\n    lname: string;\r\n    password: string;\r\n    imageUrl: string;\r\n    email: string;\r\n\r\n    constructor(userId: number, fname: string, lname: string, password: string, imageUrl: string, email: string) {\r\n        this.userId = userId;\r\n        this.fname = fname;\r\n        this.lname = lname;\r\n        this.password = password;\r\n        this.imageUrl = imageUrl;\r\n        this.email = email;\r\n    }\r\n\r\n    getFname() {\r\n        return this.fname;\r\n    }\r\n}\r\n","module.exports = \".form-rounded {\\r\\n    border-radius: 1rem;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar fixed-top navbar-expand-sm navbar-dark bg-primary\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"\\\">GaoChain</a>\\r\\n\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" *ngIf=\\\"user.isLoggedIn\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse justify-content-stretch\\\" id=\\\"navbarNavDropdown\\\" *ngIf=\\\"user.isLoggedIn\\\">\\r\\n      <ul class=\\\"navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/other',userId]\\\">Profile</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <ul class=\\\"navbar-nav col-sm-5\\\">\\r\\n        <li class=\\\"nav-item w-100\\\">\\r\\n          <input maxlength=\\\"40\\\" #searchText type=\\\"text\\\" class=\\\"form-control-sm form-rounded w-100 ml-3\\\"\\r\\n            placeholder='Search' (keyup.enter)=\\\"search(searchText.value)\\\"/>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n        <li class=\\\"nav-item dropdown\\\">\\r\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\r\\n            aria-expanded=\\\"false\\\">\\r\\n            {{user.email}}\\r\\n          </a>\\r\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"profile\\\">Edit profile</a>\\r\\n            <div class=\\\"dropdown-divider\\\"></div>\\r\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"\\\" (click)=\\\"logout()\\\">Logout</a>\\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../shared/user.service';\r\nimport { CookieService } from '../../../node_modules/ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  userId: number;\r\n\r\n  constructor(private _routeServ: Router, private user: UserService, private cookies: CookieService\r\n    ) { }\r\n\r\n  logout() {\r\n    this.user.logout();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userId = parseInt(this.cookies.get('userId'), 10);\r\n  }\r\n  search(searchText: string) {\r\n    console.log(searchText);\r\n    this._routeServ.navigate(['search/' + searchText]);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  notfound works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.css']\r\n})\r\nexport class NotfoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \":root {\\r\\n    --input-padding-x: .75rem;\\r\\n    --input-padding-y: .75rem;\\r\\n}\\r\\n\\r\\nhtml, body {\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    background-color: #f5f5f5;\\r\\n}\\r\\n\\r\\n.form-group {\\r\\n    width: 100%;\\r\\n    max-width: 420px;\\r\\n    padding: 15px;\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n.form-label-group {\\r\\n    position: relative;\\r\\n    margin-bottom: 1rem;\\r\\n}\\r\\n\\r\\n.form-label-group > input, .form-label-group > label {\\r\\n    padding: var(--input-padding-y) var(--input-padding-x);\\r\\n}\\r\\n\\r\\n.form-label-group > label {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    margin-bottom: 0; /* Override default `<label>` margin */\\r\\n    line-height: 1.5;\\r\\n    color: #495057;\\r\\n    border: 1px solid transparent;\\r\\n    border-radius: .25rem;\\r\\n    transition: all .1s ease-in-out;\\r\\n}\\r\\n\\r\\n.form-label-group input::-webkit-input-placeholder {\\r\\n    color: transparent;\\r\\n}\\r\\n\\r\\n.form-label-group input:-ms-input-placeholder {\\r\\n    color: transparent;\\r\\n}\\r\\n\\r\\n.form-label-group input::-ms-input-placeholder {\\r\\n    color: transparent;\\r\\n}\\r\\n\\r\\n.form-label-group input::placeholder {\\r\\n    color: transparent;\\r\\n}\\r\\n\\r\\n.form-label-group input:not(:placeholder-shown) {\\r\\n    padding-top: calc(var(--input-padding-y) + var(--input-padding-y) * (2 / 3));\\r\\n    padding-bottom: calc(var(--input-padding-y) / 3);\\r\\n}\\r\\n\\r\\n.form-label-group input:not(:placeholder-shown) ~ label {\\r\\n    padding-top: calc(var(--input-padding-y) / 3);\\r\\n    padding-bottom: calc(var(--input-padding-y) / 3);\\r\\n    font-size: 12px;\\r\\n    color: #777;\\r\\n}\\r\\n\\r\\n.borderStyle {\\r\\n    border: 4px solid black;\\r\\n}\\r\\n\\r\\n.card {\\r\\n    max-width: 45rem;\\r\\n    height: 60vh;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n#post {\\r\\n    resize: none;\\r\\n}\\r\\n\\r\\n#form-signin {\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\nvirtual-scroll {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    /* height: 100%; */\\r\\n}\\r\\n\\r\\napp-post {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.total-padding {\\r\\n    height: 10px;\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar { \\r\\n    display: none; \\r\\n}\\r\\n\\r\\n.round-img-container{\\r\\n\\r\\n    /* Makes a circle */\\r\\n    border-radius:50%; \\r\\n    border: 2px solid black;\\r\\n    width: 200px;\\r\\n    height: 200px;\\r\\n\\r\\n    /* Centers circle */\\r\\n    margin: auto;\\r\\n\\r\\n    /* Centers contents of the circle */\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n\\r\\n    /* Cuts off overflow */\\r\\n    overflow: hidden;\\r\\n  }\\r\\n\\r\\n.round-contained-img{\\r\\n    max-height:100%;\\r\\n    min-width:100%;\\r\\n\\r\\n    /* Maintain aspect ratio */\\r\\n    flex-shrink: 0;\\r\\n  }\"","module.exports = \"\\r\\n<div class='card-group'>\\r\\n  <div class='card border-light'>\\r\\n    <div class='card-body'>\\r\\n      <div class='form-group' id='profileTable' style='background-color: cadetblue'>\\r\\n        <div class='text-center round-img-container'>\\r\\n          <img src={{profile_pic}} class=\\\"round-contained-img\\\" style='border: 2px solid black'/>\\r\\n        </div>\\r\\n        <br/>\\r\\n        <h6 class='text-left mb-3 font-weight-bold'>First Name: {{fname}}</h6>\\r\\n        <h6 class='text-left mb-3 font-weight-bold'>Last Name: {{lname}}</h6>\\r\\n        <h6 class='text-left mb-3 font-weight-bold'>Email: {{email}}</h6>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class='card border-light'>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <virtual-scroll [items]=\\\"userPosts\\\" [bufferAmount]=\\\"5\\\" [childHeight]=\\\"85\\\" (update)=\\\"viewPortItems = $event\\\"\\r\\n      style='height:550px'>\\r\\n        <app-post *ngFor=\\\"let userPost of viewPortItems\\\" [userPost]=\\\"userPost\\\">\\r\\n        </app-post>\\r\\n      </virtual-scroll>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- <div class='container'>\\r\\n  <div class='row justify-content-start'>\\r\\n    <div class='col'>\\r\\n      <div class='form-group' id='profileTable' style='background-color: cadetblue'>\\r\\n        <div class='text-center'>\\r\\n            <img src={{profile_pic}} class='rounded-circle' style='border: 2px solid black' width=\\\"205\\\" height=\\\"200\\\" />\\r\\n        </div>\\r\\n        <br/>\\r\\n        <h6 class='text-left mb-3 font-weight-bold'>First Name: {{fname}}</h6>\\r\\n        <h6 class='text-left mb-3 font-weight-bold'>Last Name: {{lname}}</h6>\\r\\n        <h6 class='text-left mb-3 font-weight-bold'>Email: {{email}}</h6>\\r\\n      </div>        \\r\\n    </div>\\r\\n    <div class='col'>\\r\\n      <div class='card border-light mb-3'>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <virtual-scroll [items]=\\\"userPosts\\\" [bufferAmount]=\\\"5\\\" [childHeight]=\\\"85\\\"\\r\\n              (update)=\\\"viewPortItems = $event\\\">\\r\\n            <app-post *ngFor=\\\"let userPost of viewPortItems\\\" [userPost]=\\\"userPost\\\">\\r\\n            </app-post>\\r\\n          </virtual-scroll>\\r\\n        </div>  \\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n -->\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../shared/user.service';\r\nimport { ActivatedRoute, Router } from '../../../node_modules/@angular/router';\r\nimport { CookieService } from '../../../node_modules/ngx-cookie-service';\r\nimport { PostObject } from '../shared/post';\r\nimport { PostService } from '../shared/post.service';\r\n\r\n@Component({\r\n  selector: 'app-otherprofile',\r\n  templateUrl: './otherprofile.component.html',\r\n  styleUrls: ['./otherprofile.component.css']\r\n})\r\nexport class OtherprofileComponent implements OnInit {\r\n  otherId: string;\r\n  selectedFile: any;\r\n  fname: string;\r\n  lname: string;\r\n  email: string;\r\n  private userPosts: Array<PostObject>;\r\n  private viewPortItems: Array<PostObject>;\r\n//  profile_pic: any;\r\n\r\n  // default profile_pic if none is provided\r\n  profile_pic = 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png';\r\n  constructor(private user: UserService, private postService: PostService, private route: ActivatedRoute,\r\n    private router: Router, private cookies: CookieService) {\r\n  }\r\n  /*\r\n    The ngOnInit() gets the values from the Post page or anywhere else that routes to this profile page.\r\n    Below are the parameters that will be grabbed and assigned to the values above to be displayed\r\n    on the html side.\r\n\r\n    If possible, we might want to send only the userId and then do a HttpClient request here to get\r\n    the user info. If not, then we'll have to do this manually like this.\r\n  */\r\n  ngOnInit() {\r\n    this.otherId = this.route.snapshot.paramMap.get('userId');\r\n    // getUserInfo\r\n    this.user.getUserInfo(this.otherId).subscribe(response => {\r\n      this.fname = response['fname'];\r\n      this.lname = response['lname'];\r\n      this.email = response['email'];\r\n      this.profile_pic = response['imageid'] ? response['imageid'] : this.profile_pic;\r\n    });\r\n\r\n    this.postService.getUserPostInfo(parseInt(this.otherId, 10)).subscribe((response: any) => {\r\n      this.userPosts = response;\r\n      this.viewPortItems = response;\r\n    });\r\n\r\n  }\r\n}\r\n","module.exports = \".card{\\r\\n  width: 400px;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n:root {\\r\\n    --input-padding-x: .75rem;\\r\\n    --input-padding-y: .75rem;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.card {\\r\\n  max-width: 60rem;\\r\\n  height: auto;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.card-header {\\r\\n  background-color: #0094ff;\\r\\n  padding-top: 10px;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.btn:hover {\\r\\n    background-color: #21007F;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\nhtml,\\r\\nbody {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\nbody {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  background-color: #f5f5f5;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.form-group {\\r\\n  width: 100%;\\r\\n  max-width: 420px;\\r\\n  padding: 15px;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.form-label-group {\\r\\n  position: relative;\\r\\n  margin-bottom: 1rem;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.form-label-group > input,\\r\\n.form-label-group > label {\\r\\n  padding: var(--input-padding-y) var(--input-padding-x);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.form-label-group > label {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n  margin-bottom: 0; /* Override default `<label>` margin */\\r\\n  line-height: 1.5;\\r\\n  color: #495057;\\r\\n  border: 1px solid transparent;\\r\\n  border-radius: .25rem;\\r\\n  transition: all .1s ease-in-out;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.form-label-group input::-webkit-input-placeholder {\\r\\n  color: transparent;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.form-label-group input:-ms-input-placeholder {\\r\\n  color: transparent;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.form-label-group input::-ms-input-placeholder {\\r\\n  color: transparent;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.form-label-group input::placeholder {\\r\\n  color: transparent;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.form-label-group input:not(:placeholder-shown) {\\r\\n  padding-top: calc(var(--input-padding-y) + var(--input-padding-y) * (2 / 3));\\r\\n  padding-bottom: calc(var(--input-padding-y) / 3);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.form-label-group input:not(:placeholder-shown) ~ label {\\r\\n  padding-top: calc(var(--input-padding-y) / 3);\\r\\n  padding-bottom: calc(var(--input-padding-y) / 3);\\r\\n  font-size: 12px;\\r\\n  color: #777;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.borderStyle {\\r\\n  border: 4px solid black;\\r\\n}\"","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header text-white bg-primary\\\" style=\\\"padding-bottom: 0px\\\">\\r\\n    <h5>\\r\\n      <b>Reset Password</b>\\r\\n    </h5>\\r\\n  </div>\\r\\n  <div class=\\\"text-center\\\" *ngIf='displayMessage'>\\r\\n    <p id='alertBox' style='color: red'>Reset Password Unsucessful! You probably don't have a valid account here.</p>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div #resetForm class='form-group' id='resetForm'>\\r\\n      <div class='form-label-group text-center'>\\r\\n        <input type='email' id='email' name='email' class='form-control' placeholder='email'\\r\\n          required autofocus [(ngModel)]='inputEmail'/>\\r\\n        <label for='email'>Enter Email</label>\\r\\n      </div>\\r\\n      <div class='form-label-group'>\\r\\n        <button class='btn btn-lg btn-primary btn-block' id='resetButton' (click)='resetPassword()'>Reset</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../shared/user.service';\r\nimport { Router } from '../../../node_modules/@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-password',\r\n  templateUrl: './password.component.html',\r\n  styleUrls: ['./password.component.css']\r\n})\r\nexport class PasswordComponent implements OnInit {\r\n\r\n  email: string;\r\n  inputEmail: string;\r\n\r\n  // to display success message\r\n  displayMessage = false;\r\n\r\n  constructor(private userServ: UserService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  /*\r\n    This function will trigger when the resetButton is clicked. This function will\r\n    grab the inputted value and use that to send an email over to the user. At the\r\n    moment, this function hasn't been properly tested yet.\r\n  */\r\n  resetPassword() {\r\n    this.displayMessage = false;\r\n    this.userServ.resetPassword(this.inputEmail).subscribe(response => {\r\n      console.log(response);\r\n      if (response['success'] === true) {\r\n        this.router.navigateByUrl('/');\r\n      } else {\r\n        this.displayMessage = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  displayAlertFunc() {\r\n    if (this.displayMessage === true) {\r\n      this.displayMessage = false;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LikeService {\r\n\r\n  constructor(private client: HttpClient) { }\r\n\r\n  getPostLikes(postId: number): Observable<string> {\r\n    const params = '?postId=' + postId;\r\n    const url = 'http://localhost:12345/Project2/getPostLikesById.do' + params;\r\n    return this.client.get(url).pipe(map(resp => resp as string));\r\n  }\r\n\r\n  hasUserLiked(postId: number, userId: number): Observable<number> {\r\n    const params = '?postId=' + postId + '&userId=' + userId;\r\n    const url = 'http://localhost:12345/Project2/hasUserLiked.do' + params;\r\n    return this.client.get(url).pipe(map(resp => resp as number));\r\n  }\r\n\r\n  incrementPostLikes(postId: number, userId: number): Observable<string> {\r\n    const params = '?postId=' + postId + '&userId=' + userId;\r\n    const url = 'http://localhost:12345/Project2/incrementLikesById.do' + params;\r\n    return this.client.get(url).pipe(map(resp => resp as string));\r\n  }\r\n\r\n  decrementPostLikes(postId: number, userId: number): Observable<string> {\r\n    const params = '?postId=' + postId + '&userId=' + userId;\r\n    const url = 'http://localhost:12345/Project2/decrementLikesById.do' + params;\r\n    return this.client.get(url).pipe(map(resp => resp as string));\r\n  }\r\n\r\n}\r\n","module.exports = \".card {\\r\\n    max-width: 45rem;\\r\\n    height: auto;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.btn {\\r\\n    width:48%;\\r\\n    margin:0.5%;\\r\\n}\\r\\n\\r\\n.btn:hover {\\r\\n    background-color: #a8a8a8;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    height: 300px;\\r\\n    width: auto;\\r\\n    border: 1px black;\\r\\n}\\r\\n\\r\\n.centerPost {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    background-color: #cfcfcf;\\r\\n}\\r\\n\\r\\n.sr-only {\\r\\n    height: 100px !important;\\r\\n}\\r\\n\\r\\n.date {\\r\\n    float: right;\\r\\n}\\r\\n\\r\\n.name {\\r\\n    cursor: pointer !important;\\r\\n    font-weight: 700;\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.postHeader {\\r\\n    clear: both;\\r\\n}\\r\\n\\r\\n.class {\\r\\n    width: 100%;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\"","module.exports = \"<!--this is the post portion-->\\r\\n<div class=\\\"card\\\">\\r\\n\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"postHeader\\\">\\r\\n      <span class=\\\"name\\\"><a [routerLink]=\\\"['/other',ownerId]\\\" skipLocationChange=true>\\r\\n        {{firstname + \\\" \\\" + lastname}}</a></span>\\r\\n    <span class=\\\"date\\\">Posted: {{postedDate}}</span>\\r\\n  </div><br>\\r\\n    <div id=\\\"carouselExampleIndicators\\\" class=\\\"carousel slide\\\" data-interval=\\\"false\\\" data-ride=\\\"carousel\\\">\\r\\n      <div class=\\\"carousel-inner\\\" >\\r\\n        <div *ngFor=\\\"let image of image_urls; let k = index\\\" [ngClass]=\\\"k == 0 ? 'carousel-item active' : 'carousel-item'\\\">\\r\\n          <div class=\\\"centerPost\\\" >\\r\\n            <img class=\\\"postImage\\\" src={{image.url}} alt=\\\"\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <a class=\\\"carousel-control-prev\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"prev\\\">\\r\\n        <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        <span class=\\\"sr-only\\\">Previous</span>\\r\\n      </a>\\r\\n      <a class=\\\"carousel-control-next\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"next\\\">\\r\\n        <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"false\\\"></span>\\r\\n        <span class=\\\"sr-only\\\">Next</span>\\r\\n      </a>\\r\\n    </div>\\r\\n\\r\\n    <p class=\\\"card-text\\\">{{text}}</p>\\r\\n    <span>Likes: {{likes}}</span> <br/>\\r\\n    <button (click)=\\\"toggleLike()\\\" class=\\\"btn btn-secondary\\\">{{likeButtonText}}</button>\\r\\n    <!-- <button (click)=\\\"toggleComments()\\\" class=\\\"btn btn-info\\\">Comments</button> -->\\r\\n    <button (click)=\\\"displayComment()\\\" class=\\\"btn btn-info\\\">Comments</button>\\r\\n  </div>\\r\\n\\r\\n  <!--This is the comment portion-->\\r\\n  <div id='comment1' class='card-body border-top border-dark' style='background-color: bisque' *ngIf='showComment'>\\r\\n    <h6 class='card-subtitle mb-2 text-muted'>Enter Comment</h6>\\r\\n    <textarea class=\\\"form-control\\\" rows='3' maxlength=\\\"255\\\" [(ngModel)]=\\\"commentText\\\" placeholder=\\\"Max 255 characters\\\"></textarea>\\r\\n\\r\\n    <input style='display: none' type='file' #findFile\\r\\n      class='form-control-file'(change)='onFileChanged($event)'/>\\r\\n    <button class='btn btn-info' id='uploadButton' (click)='findFile.click()'>upload</button>\\r\\n\\r\\n    <button class='btn btn-success' id='postButton' (click)='addComment()'>Post</button>\\r\\n\\r\\n    <div class='card-body border-bottom border-dark'></div>\\r\\n\\r\\n    <div class='' *ngFor = 'let temp of comments; let i = index'>\\r\\n      <div *ngIf='i < limit'>\\r\\n          <span class='card-title'>Owner: {{temp.user.fname + \\\" \\\" + temp.user.lname}}</span>\\r\\n          <div *ngIf=\\\"isCurrentUser(temp.user.email)\\\" >\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteComment(temp)\\\">\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n          </div>\\r\\n\\r\\n          <br/>\\r\\n          <div class='card-body' style='background-color: aliceblue'>\\r\\n            {{temp.text}}\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class='card-body border-top border-dark'>\\r\\n      <button class='btn btn-secondary offset-3' id='loadMoreButton' (click)='incrementLimit()'>Load More</button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { PostService } from '../shared/post.service';\r\nimport { PostData } from '../models/postdata.class';\r\nimport { ImageData } from '../models/imagedata.class';\r\nimport { CommentList } from '../shared/commentList.service';\r\nimport { CommentObject } from '../shared/comment';\r\nimport { LikeService } from './like.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { CommentData } from '../models/commentdata.class';\r\nimport { CommentService } from '../shared/comment.service';\r\nimport { UserData } from '../models/userdata.class';\r\n\r\n@Component({\r\n  selector: 'app-post',\r\n  templateUrl: './post.component.html',\r\n  styleUrls: ['./post.component.css']\r\n})\r\nexport class PostComponent implements OnInit {\r\n  private _userPost: Array<Object>;\r\n  // html specific fields\r\n  likeButtonText = 'Like';\r\n  // current user details\r\n  userId = parseInt(this.cookies.get('userId'), 10);\r\n  fname = this.cookies.get('firstName');\r\n  lname = this.cookies.get('lastName');\r\n  private email = this.cookies.get('email');\r\n\r\n  // actual post info fields --> this will eventually be replaced with an actual\r\n  //                              user module\r\n\r\n  firstname: string;\r\n  lastname: string;\r\n  postedDate = 'Yesterday';\r\n  content: string;\r\n  text = 'Here is a test String to visualize text in a post.';\r\n  image_urls: ImageData[] = new Array();\r\n  likes: any;\r\n  likeString: string;\r\n  postId: number;\r\n  ownerId: number;\r\n  ownerEmail: string;\r\n\r\n  // for comments\r\n  showComment = false;\r\n  commentText: string;\r\n\r\n  // to display more or not\r\n  limit = 2;\r\n\r\n  // for uploaded files\r\n  selectedFile: any;\r\n\r\n  // should probably make an interface for comments\r\n  comments: CommentData[];\r\n\r\n  @Input()\r\n  set userPost(userPost: Array<Object>) {\r\n    this._userPost = userPost;\r\n  }\r\n\r\n  get userPost() {\r\n    return this._userPost;\r\n  }\r\n\r\n  constructor(private postService: PostService, private likeService: LikeService,\r\n              private cookies: CookieService, private commentService: CommentService) {\r\n   }\r\n\r\n  ngOnInit() {\r\n    // automatically set cookie of ownerId to -1 upon loading\r\n    this.cookies.set('ownerId', '-1');\r\n\r\n    const post = new PostData(this._userPost);\r\n    this.populatePost(post);\r\n    this.likeService.getPostLikes(post.postId).subscribe(data => this.likes = data);\r\n    this.comments = post.comments;\r\n\r\n    // checks if the user has already liked the post and updates the button accordingly\r\n    this.likeService.hasUserLiked(post.postId, this.userId).subscribe(data => {\r\n      if (data === 1) {\r\n        this.likeButtonText = 'Unlike';\r\n      } else {\r\n        this.likeButtonText = 'Like';\r\n      }\r\n    });\r\n  }\r\n\r\n  populatePost(data: PostData) {\r\n    this.ownerId = data.user.userId;\r\n    this.postId = data.postId;\r\n    this.firstname = data.user.fname;\r\n    this.lastname = data.user.lname;\r\n    this.ownerEmail = data.user.email;\r\n    this.text = data.content;\r\n    this.image_urls = data.images;\r\n    const d = new Date(data.postedDate);\r\n    this.postedDate = d.toLocaleDateString();\r\n  }\r\n\r\n\r\n  /*\r\n    toggleLike() is triggered when ever the like button is clicked. It toggles the text and updates the counter.\r\n  */\r\n  toggleLike() {\r\n    if (this.likeButtonText === 'Like') {\r\n      this.likes++;\r\n      this.likeButtonText = 'Unlike';\r\n      this.likeService.incrementPostLikes(this.postId, this.userId).subscribe();\r\n    } else {\r\n      this.likes--;\r\n      this.likeButtonText = 'Like';\r\n      this.likeService.decrementPostLikes(this.postId, this.userId).subscribe();\r\n    }\r\n  }\r\n  /*\r\n    Here we could open the comments section or close it if already open.\r\n    The details need to be discussed.\r\n  */\r\n/*   toggleComments() {\r\n    console.log('comments clicked');\r\n  }*/\r\n  /*\r\n    This function is triggered when the \"Comment\" button is clicked. This will change\r\n    the value of 'showComment' from true to false, false to true, in order to display\r\n    the comment section underneath the post.\r\n  */\r\n  displayComment() {\r\n    if (this.showComment === true) {\r\n      this.showComment = false;\r\n    } else if (this.showComment === false) {\r\n      this.showComment = true;\r\n    }\r\n  }\r\n  /*\r\n    This function is triggered when the 'loadMoreButton' is clicked, which will multiply\r\n    the 'limit' variable by 2.\r\n    It now only changes when more comments are available.\r\n  */\r\n incrementLimit() {\r\n   if (this.limit <= this.comments.length) {\r\n    this.limit *= 2;\r\n   }\r\n\r\n }\r\n  /*\r\n    This function will be triggered when the uploadButton is pressed, which will trigger the\r\n    hidden input tag, which will grab the file that the user chooses.\r\n  */\r\n  onFileChanged(event) {\r\n  this.selectedFile = event.target.files[0];\r\n  }\r\n  /*\r\n    This function will be triggered when the postButton is pressed, which will commit an\r\n    HTTPClient request to the register service to be added to the database.\r\n\r\n    Currently, it is unimplemented.\r\n  */\r\n\r\n  isCurrentUser(email: string): boolean {\r\n    return this.email === email;\r\n  }\r\n\r\n  // adds comment to the existing array and sets it up in the database\r\n  addComment() {\r\n    if (!this.commentText) {\r\n      return;\r\n    }\r\n    const user = new UserData(this.userId, this.fname, this.lname, '', '', this.email);\r\n    const comment = new CommentData(0, this.postId, user, this.commentText);\r\n    // this line updates the id of the new comment to match its persistent copy\r\n    // this allows a brand new comment to be deleted\r\n    this.commentService.newComment(comment).subscribe( data => comment.commentId = data);\r\n    this.comments.push(comment);\r\n    this.commentText = '';\r\n  }\r\n\r\n  deleteComment(comment: CommentData) {\r\n    if (comment.commentId === 0) {\r\n\r\n    }\r\n    this.commentService.deleteComment(comment).subscribe();\r\n    const index = this.comments.indexOf(comment);\r\n    if (index !== -1 ) {\r\n      this.comments.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n","module.exports = \":root {\\r\\n    --input-padding-x: .75rem;\\r\\n    --input-padding-y: .75rem;\\r\\n  }\\r\\n  \\r\\n  html,\\r\\n  body {\\r\\n    height: 100%;\\r\\n  }\\r\\n  \\r\\n  body {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    background-color: #f5f5f5;\\r\\n  }\\r\\n  \\r\\n  .form-group {\\r\\n    width: 100%;\\r\\n    max-width: 420px;\\r\\n    padding: 15px;\\r\\n    margin: auto;\\r\\n  }\\r\\n  \\r\\n  .form-label-group {\\r\\n    position: relative;\\r\\n    margin-bottom: 1rem;\\r\\n  }\\r\\n  \\r\\n  .form-label-group > input,\\r\\n  .form-label-group > label {\\r\\n    padding: var(--input-padding-y) var(--input-padding-x);\\r\\n  }\\r\\n  \\r\\n  .form-label-group > label {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    margin-bottom: 0; /* Override default `<label>` margin */\\r\\n    line-height: 1.5;\\r\\n    color: #495057;\\r\\n    border: 1px solid transparent;\\r\\n    border-radius: .25rem;\\r\\n    transition: all .1s ease-in-out;\\r\\n  }\\r\\n  \\r\\n  .form-label-group input::-webkit-input-placeholder {\\r\\n    color: transparent;\\r\\n  }\\r\\n  \\r\\n  .form-label-group input:-ms-input-placeholder {\\r\\n    color: transparent;\\r\\n  }\\r\\n  \\r\\n  .form-label-group input::-ms-input-placeholder {\\r\\n    color: transparent;\\r\\n  }\\r\\n  \\r\\n  .form-label-group input::placeholder {\\r\\n    color: transparent;\\r\\n  }\\r\\n  \\r\\n  .form-label-group input:not(:placeholder-shown) {\\r\\n    padding-top: calc(var(--input-padding-y) + var(--input-padding-y) * (2 / 3));\\r\\n    padding-bottom: calc(var(--input-padding-y) / 3);\\r\\n  }\\r\\n  \\r\\n  .form-label-group input:not(:placeholder-shown) ~ label {\\r\\n    padding-top: calc(var(--input-padding-y) / 3);\\r\\n    padding-bottom: calc(var(--input-padding-y) / 3);\\r\\n    font-size: 12px;\\r\\n    color: #777;\\r\\n  }\\r\\n  \\r\\n  .borderStyle {\\r\\n    border: 4px solid black;\\r\\n  }\\r\\n  \\r\\n  .round-img-container{\\r\\n\\r\\n    /* Makes a circle */\\r\\n    border-radius:50%; \\r\\n    border: 2px solid black;\\r\\n    width: 200px;\\r\\n    height: 200px;\\r\\n\\r\\n    /* Centers circle */\\r\\n    margin: auto;\\r\\n\\r\\n    /* Centers contents of the circle */\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n\\r\\n    /* Cuts off overflow */\\r\\n    overflow: hidden;\\r\\n  }\\r\\n  \\r\\n  .round-contained-img{\\r\\n    max-height:100%;\\r\\n    min-width:100%;\\r\\n\\r\\n    /* Maintain aspect ratio */\\r\\n    flex-shrink: 0;\\r\\n  }\"","module.exports = \"<div class='form-group' id='profileTable' style='background-color: cadetblue'>\\r\\n\\r\\n  <div class='text-center round-img-container'>\\r\\n    <img src={{profile_pic}} class=\\\"round-contained-img\\\" />\\r\\n  </div>\\r\\n\\r\\n  <br/>\\r\\n  <h6 class='text-left mb-3 font-weight-bold'>First Name: {{fname}}</h6>\\r\\n  <div class='form-label-group'>\\r\\n    <input type='text' id='fname' class='form-control' placeholder='first name' required\\r\\n      autofocus [(ngModel)]='_inputFname' />\\r\\n    <label for='fname'>new first name</label>\\r\\n  </div>\\r\\n  <h6 class='text-left mb-3 font-weight-bold'>Last Name: {{lname}}</h6>\\r\\n  <div class='form-label-group'>\\r\\n    <input type='text' id='lname' class='form-control' placeholder='first name' required\\r\\n      autofocus [(ngModel)]='_inputLname' />\\r\\n    <label for='lname'>new last name</label>\\r\\n  </div>\\r\\n  <h6 class='text-left mb-3 font-weight-bold'>Email: {{email}}</h6>\\r\\n  <div class='form-label-group'>\\r\\n    <input type='email' id='email' class='form-control' placeholder='email' required\\r\\n      autofocus [(ngModel)]='_inputEmail' />\\r\\n    <label for='email'>new email</label>\\r\\n  </div>\\r\\n  <h6 class='text-left mb-3 font-weight-bold'>To Change Password, Enter New Password:</h6>\\r\\n  <div class='form-label-group'>\\r\\n    <input type='password' id='password' class='form-control' placeholder='password'\\r\\n      required autofocus [(ngModel)]='_inputPassword' />\\r\\n    <label for='password'>new password</label>\\r\\n  </div>\\r\\n  <div class='form-label-group'>\\r\\n    <input style='display: none' type='file' #findFile class='form-control-file' (change)='onFileChanged($event)'\\r\\n    />\\r\\n    <span class='col-sm-1'>\\r\\n      <span class='font-weight-bold'>Upload Profile Pic:</span>&nbsp;\\r\\n      <button class='btn btn-primary' id='findButton' (click)='findFile.click()'>Find File</button>\\r\\n    </span>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"!!picDataUrl\\\" class=\\\"round-img-container\\\" style=\\\"margin-bottom: 20px;\\\">\\r\\n    <img class=\\\"round-contained-img\\\" [src]=\\\"picDataUrl\\\">\\r\\n  </div>\\r\\n  <h6 class='text-left mb-3 font-weight-bold'>To Confirm Changes, Enter Current Password:</h6>\\r\\n  <div class=\\\"form-label-group\\\">\\r\\n    <input type=\\\"password\\\" id=\\\"currentPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Current password\\\"\\r\\n      required [(ngModel)]=\\\"currentPassword\\\" />\\r\\n    <label for=\\\"currentPassword\\\">current password</label>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"!loading\\\" class='form-label-group'>\\r\\n    <button class='btn btn-lg btn-success btn-block' id='updateButton' (click)='updateAccount()'>Update</button>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"loading\\\" class=\\\"loader\\\" ></div>\\r\\n\\r\\n  <div class=\\\"alert alert-success alert-dismissible\\\" *ngIf='displaySuccess'>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" (click)='displayAlertFunc()'>&times;</button>\\r\\n    <strong>Success!</strong> Profile Update Successful!\\r\\n  </div>\\r\\n  <div class=\\\"alert alert-danger alert-dismissible\\\" *ngIf='displayError'>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" (click)='displayAlertFunc()'>&times;</button>\\r\\n    <strong>Failure!</strong> Profile Update failed.\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from '../shared/user.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  userId: number;\r\n  selectedFile: any;\r\n  fname: string;\r\n  lname: string;\r\n  email: string;\r\n  private uploadedPic = false;\r\n  private loading = false;\r\n\r\n  // to display success message\r\n  displaySuccess = false;\r\n  displayError = false;\r\n\r\n  _inputFname = '';\r\n  _inputLname = '';\r\n  _inputEmail = '';\r\n  _inputPassword = '';\r\n\r\n  // default profile_pic if none is provided\r\n  profile_pic = 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png';\r\n\r\n\r\n  picDataUrl: string;\r\n  currentPassword: string;\r\n\r\n\r\n  constructor(private user: UserService, private route: ActivatedRoute,\r\n    private router: Router, private cookies: CookieService) {\r\n  }\r\n  /*\r\n    The ngOnInit() gets the values from the Post page or anywhere else that routes to this profile page.\r\n    Below are the parameters that will be grabbed and assigned to the values above to be displayed\r\n    on the html side.\r\n\r\n    If possible, we might want to send only the userId and then do a HttpClient request here to get\r\n    the user info. If not, then we'll have to do this manually like this.\r\n  */\r\n  ngOnInit() {\r\n    this.userId = this.user.userId;\r\n    this.fname = this.user.firstName;\r\n    this.lname = this.user.lastName;\r\n    this.email = this.user.email;\r\n    // this.profile_pic = this.user.picUrl;\r\n    this.profile_pic = this.user.picUrl ? this.user.picUrl : this.profile_pic;\r\n  }\r\n  /*\r\n    Same function as in RegisterComponent and PostComponent. This just takes the file selected by\r\n    the user and assign it to the 'selectedFile' variable to be passed.\r\n  */\r\n  onFileChanged(event) {\r\n    this.selectedFile = event.target.files[0];\r\n    console.log(this.selectedFile);\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      this.picDataUrl = reader.result;\r\n    };\r\n    reader.readAsDataURL(this.selectedFile);\r\n    this.uploadedPic = true;\r\n  }\r\n\r\n  /*\r\n    This function will be triggered when the updateButton is clicked. WHen it is triggered, it\r\n    will grab all of the input values from the html side and check for each value.\r\n    Once the checks are done, then these value will be sent to the middle-end to be send and\r\n    update the database of the respective user\r\n  */\r\n  updateAccount() {\r\n\r\n    const userObj = {\r\n      userId: this.userId,\r\n      fname: this._inputFname ? this._inputFname : null,\r\n      lname: this._inputLname ? this._inputLname : null,\r\n      email: this._inputEmail ? this._inputEmail : null,\r\n      password: this._inputPassword ? this._inputPassword : null,\r\n      imageid: this.picDataUrl ? this.picDataUrl : null\r\n    };\r\n\r\n    this.loading = true;\r\n\r\n    this.user.updateAccount(userObj, this.currentPassword).subscribe(response => {\r\n      console.log(response);\r\n      if (response && (response['email'] != null)) {\r\n        const user = {\r\n          userId: response['userId'] ? response['userId'] : this.userId,\r\n          firstName: response['fname'] ? response['fname'] : this.fname,\r\n          lastName: response['lname'] ? response['lname'] : this.lname,\r\n          email: response['email'] ? response['email'] : this.email,\r\n          picUrl: response['imageid'] ? response['imageid'] : this.profile_pic,\r\n        };\r\n\r\n\r\n        this._inputFname = '';\r\n        this._inputLname = '';\r\n        this._inputEmail = '';\r\n        this._inputPassword = '';\r\n        this.profile_pic = response['imageid'] ? response['imageid'] : this.profile_pic;\r\n        this.picDataUrl = undefined;\r\n\r\n        this.user.setLoggedIn(user);\r\n        this.displaySuccess = true;\r\n      } else {\r\n        this.displayError = true;\r\n      }\r\n\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  displayAlertFunc() {\r\n    if (this.displaySuccess === true) {\r\n      this.displaySuccess = false;\r\n    }\r\n    if (this.displayError === true) {\r\n      this.displayError = false;\r\n    }\r\n  }\r\n}\r\n","module.exports = \".card{\\r\\n  width: 400px;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n\\r\\n:root {\\r\\n  --input-padding-x: .75rem;\\r\\n  --input-padding-y: .75rem;\\r\\n}\\r\\n\\r\\n\\r\\nhtml,\\r\\nbody {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n\\r\\nbody {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  background-color: #f5f5f5;\\r\\n}\\r\\n\\r\\n\\r\\n.form-group {\\r\\n  width: 100%;\\r\\n  max-width: 420px;\\r\\n  padding: 15px;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n\\r\\n.form-label-group {\\r\\n  position: relative;\\r\\n  margin-bottom: 1rem;\\r\\n}\\r\\n\\r\\n\\r\\n.form-label-group > input,\\r\\n.form-label-group > label {\\r\\n  padding: var(--input-padding-y) var(--input-padding-x);\\r\\n}\\r\\n\\r\\n\\r\\n.form-label-group > label {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n  margin-bottom: 0; /* Override default `<label>` margin */\\r\\n  line-height: 1.5;\\r\\n  color: #495057;\\r\\n  border: 1px solid transparent;\\r\\n  border-radius: .25rem;\\r\\n  transition: all .1s ease-in-out;\\r\\n}\\r\\n\\r\\n\\r\\n.form-label-group input::-webkit-input-placeholder {\\r\\n  color: transparent;\\r\\n}\\r\\n\\r\\n\\r\\n.form-label-group input:-ms-input-placeholder {\\r\\n  color: transparent;\\r\\n}\\r\\n\\r\\n\\r\\n.form-label-group input::-ms-input-placeholder {\\r\\n  color: transparent;\\r\\n}\\r\\n\\r\\n\\r\\n.form-label-group input::placeholder {\\r\\n  color: transparent;\\r\\n}\\r\\n\\r\\n\\r\\n.form-label-group input:not(:placeholder-shown) {\\r\\n  padding-top: calc(var(--input-padding-y) + var(--input-padding-y) * (2 / 3));\\r\\n  padding-bottom: calc(var(--input-padding-y) / 3);\\r\\n}\\r\\n\\r\\n\\r\\n.form-label-group input:not(:placeholder-shown) ~ label {\\r\\n  padding-top: calc(var(--input-padding-y) / 3);\\r\\n  padding-bottom: calc(var(--input-padding-y) / 3);\\r\\n  font-size: 12px;\\r\\n  color: #777;\\r\\n}\\r\\n\\r\\n\\r\\n.borderStyle {\\r\\n  border: 4px solid black;\\r\\n}\"","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div *ngIf=\\\"!success\\\" class=\\\"alert alert-danger\\\">\\r\\n    Error. Please try again.\\r\\n  </div>\\r\\n  <div class=\\\"card-header text-white bg-primary\\\" style=\\\"padding-bottom: 0px\\\">\\r\\n    <h5>\\r\\n      <b>Register</b>\\r\\n    </h5>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <form class='form-group' name='registerForm' id='registerForm'>\\r\\n      <div class='form-label-group'>\\r\\n        <input type='text' name='firstname' id='fname' class='form-control' [(ngModel)]='firstname'\\r\\n          placeholder='first name' required #fname='ngModel' autofocus/>\\r\\n        <label for='fname'>First Name</label>\\r\\n        <div *ngIf='fname.invalid && (fname.dirty || fname.touched)' class='alert alert-danger'>\\r\\n          <div *ngIf='fname.errors.required'>\\r\\n            First name is required.\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class='form-label-group'>\\r\\n        <input type='text' name='lastname' id='lname' class='form-control' [(ngModel)]='lastname'\\r\\n          placeholder='first name' required #lname='ngModel' />\\r\\n        <label for='lname'>Last Name</label>\\r\\n        <div *ngIf='lname.invalid && (lname.dirty || lname.touched)' class='alert alert-danger'>\\r\\n          <div *ngIf='lname.errors.required'>\\r\\n            Last name is required.\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class='form-label-group'>\\r\\n        <input type='email' name='email' id='email' class='form-control' [(ngModel)]='email'\\r\\n          placeholder='email' required #userEmail='ngModel' />\\r\\n        <label for='email'>Email</label>\\r\\n        <div *ngIf='userEmail.invalid && (userEmail.dirty || userEmail.touched)' class='alert alert-danger'>\\r\\n          <div *ngIf='userEmail.errors.required'>\\r\\n            Email is required.\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class='form-label-group'>\\r\\n        <input type='password' name='password' id='password' class='form-control' [(ngModel)]='password'\\r\\n          placeholder='password' required #userPassword='ngModel' />\\r\\n        <label for='password'>Password</label>\\r\\n        <div *ngIf='userPassword.invalid && (userPassword.dirty || userPassword.touched)'\\r\\n          class='alert alert-danger'>\\r\\n          <div *ngIf='userPassword.errors.required'>\\r\\n            Password is required.\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class='form-label-group'>\\r\\n        <input style='display: none' type='file' #findFile class='form-control-file' (change)='onFileChanged($event)'\\r\\n          accept=\\\"image/*\\\" />\\r\\n        <span class='col-sm-1'>\\r\\n          <span class='font-weight-bold'>Upload Profile Pic:</span>&nbsp;\\r\\n          <button class='btn btn-primary' id='findButton' (click)='findFile.click()'>Find File</button>\\r\\n        </span>\\r\\n        <img class=\\\"img-fluid\\\" *ngIf=\\\"!!picDataUrl\\\" [src]=\\\"picDataUrl\\\" style=\\\"padding-top: 10px;\\\"\\r\\n        />\\r\\n      </div>\\r\\n\\r\\n      <button *ngIf=\\\"!loading\\\" class='btn btn-lg btn-primary btn-block' id='registerButton'\\r\\n        (click)='createAccount()'>Register</button>\\r\\n\\r\\n      <div *ngIf=\\\"loading\\\" class=\\\"loader\\\"></div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../shared/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  private firstname: string;\r\n  private lastname: string;\r\n  private email: string;\r\n  private password: string;\r\n  private selectedFile: File;\r\n  private loading = false;\r\n  private success = true;\r\n\r\n  private picDataUrl: string;\r\n\r\n\r\n  constructor(private router: Router, private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onFileChanged(event) {\r\n    this.selectedFile = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      this.picDataUrl = reader.result;\r\n    };\r\n    reader.readAsDataURL(this.selectedFile);\r\n  }\r\n\r\n  createAccount() {\r\n    const newUser = {\r\n      fname: this.firstname,\r\n      lname: this.lastname,\r\n      email: this.email,\r\n      password: this.password,\r\n      imageid: this.picDataUrl,\r\n    };\r\n\r\n    this.loading = true;\r\n\r\n    this.userService.registerAccount(newUser).subscribe(response => {\r\n      if (response['success']) {\r\n        this.success = true;\r\n        this.router.navigate(['/']);\r\n      } else {\r\n        this.success = false;\r\n      }\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".card {\\r\\n    max-width: 45rem;\\r\\n    height: auto;\\r\\n    margin-bottom: 10px;\\r\\n}\"","module.exports = \"<div class=\\\"container card\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"card\\\" *ngFor=\\\"let user of users\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div><a href='other/{{user.userId}}'> {{user.fname}} {{user.lname}}</a></div>\\r\\n        <div>{{user.email}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!hasResults\\\">No results</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router, ParamMap } from '../../../node_modules/@angular/router';\r\nimport { UserService } from '../shared/user.service';\r\n\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  private users;\r\n  private hasResults = false;\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private service: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.service.searchUser(params['searchText']).subscribe( response => {\r\n        this.users = response;\r\n        if (this.users.length !== 0) {\r\n          this.hasResults = true;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '../../../node_modules/@angular/common/http';\r\nimport { CommentData } from '../models/commentdata.class';\r\nimport { map } from '../../../node_modules/rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentService {\r\n\r\n  constructor(private client: HttpClient) { }\r\n\r\n  newComment(comment: CommentData) {\r\n    const userId = '' + comment.user.userId;\r\n    const postId = '' + comment.post;\r\n    const text = comment.text;\r\n    const url = 'http://localhost:12345/Project2/newComment.do';\r\n    return this.client.post(url, null, {\r\n      params: {\r\n        userId,\r\n        postId,\r\n        text\r\n      }\r\n    }).pipe(map(resp => resp as number));\r\n  }\r\n\r\n  deleteComment(comment: CommentData) {\r\n    const commentId = comment.commentId + '';\r\n    const url = 'http://localhost:12345/Project2/deleteComment.do?commentId=' + commentId;\r\n    return this.client.get(url);\r\n  }\r\n}\r\n","import { CommentObject } from './comment';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CommentList {\r\n\r\n    private listComments: CommentObject[] = [\r\n        {'id': 1,\r\n        'post_id': 10,\r\n        'owner_id': 20,\r\n        'content': 'This is SERIOUSLY ONE strange BIRDIE!',\r\n        'date_post': 'Today, DUH!'},\r\n        {'id': 2,\r\n        'post_id': 11,\r\n        'owner_id': 21,\r\n        'content': 'This is ONE F**KED UP...pond!',\r\n        'date_post': 'Tomorrow, Jeez!'\r\n        },\r\n        {'id': 3,\r\n        'post_id': 12,\r\n        'owner_id': 22,\r\n        'content': 'Seriously, change the picture!',\r\n        'date_post': 'Right Now!'\r\n        },\r\n        {'id': 4,\r\n        'post_id': 13,\r\n        'owner_id': 23,\r\n        'content': 'LOL! Birdie became REAL!',\r\n        'date_post': 'Yesterday at 11:59T0091919 PM - New York Best Boi Time'\r\n        },\r\n        {'id': 5,\r\n        'post_id': 14,\r\n        'owner_id': 24,\r\n        'content': 'It\\' the ugly duckling! Shoo!',\r\n        'date_post': 'Tuesday of Next Week!'\r\n        },\r\n    ];\r\n\r\n    public getListComments(): CommentObject[] {\r\n        return this.listComments;\r\n    }\r\n\r\n    public addComment(oneComment: CommentObject) {\r\n        this.listComments.push(oneComment);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { PostObject } from '../shared/post';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PostService {\r\n\r\n  private apiURL = 'http://localhost:12345/Project2/';\r\n  constructor(private client: HttpClient) { }\r\n  getAllPostInfo(): Observable<string> {\r\n    const url = this.apiURL + 'getAllPosts.do';\r\n    return this.client.get(url).pipe(map(resp => resp as string));\r\n  }\r\n  getUserPostInfo(uid: number): Observable<string> {\r\n    const url = this.apiURL + 'getUserPostsByUid.do?uid=' + uid;\r\n    return this.client.get(url).pipe(map(resp => resp as string));\r\n  }\r\n  getPostInfo(id: number): Observable<string> {\r\n    const url = this.apiURL + 'getPostById.do?id=' + id;\r\n    return this.client.get(url).pipe(map(resp => resp as string));\r\n  }\r\n  submitPost(email: string, post: string) {\r\n    const url = this.apiURL + 'submitPost.do';\r\n    return this.client.post(url, null, {\r\n      params: {\r\n        email,\r\n        post\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { PostObject } from './post';\r\nimport { Observable } from '../../../node_modules/rxjs';\r\nimport { map } from '../../../node_modules/rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  get email() {\r\n    return this._email;\r\n  }\r\n  set email(email: string) {\r\n    this._email = email;\r\n  }\r\n\r\n  userId = parseInt(this.cookies.get('userId'), 10);\r\n  private _email = this.cookies.get('email');\r\n  firstName = this.cookies.get('firstName');\r\n  lastName = this.cookies.get('lastName');\r\n  picUrl = this.cookies.get('picUrl');\r\n  isLoggedIn = this.cookies.check('isLoggedIn');\r\n\r\n  private apiUrl = 'http://localhost:12345/Project2/';\r\n\r\n  constructor(private http: HttpClient, private cookies: CookieService) { }\r\n\r\n  login(email: string, password: string) {\r\n    return this.http.post(this.apiUrl + 'login.do', null, {\r\n      params: {\r\n        email,\r\n        password,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets the logged in user to be the user described by the parameter.\r\n   *\r\n   * @param user The user that should be logged in.\r\n   */\r\n  setLoggedIn(user) {\r\n    this.userId = user.userId;\r\n    this.email = user.email;\r\n    this.firstName = user.firstName;\r\n    this.lastName = user.lastName;\r\n    this.picUrl = user.picUrl;\r\n    this.isLoggedIn = true;\r\n    this.cookies.set('userId', user.userId);\r\n    this.cookies.set('email', user.email);\r\n    this.cookies.set('firstName', user.firstName);\r\n    this.cookies.set('lastName', user.lastName);\r\n    this.cookies.set('picUrl', user.picUrl);\r\n    this.cookies.set('isLoggedIn', 'true');\r\n  }\r\n\r\n  logout() {\r\n    this.cookies.delete('userId');\r\n    this.cookies.delete('firstName');\r\n    this.cookies.delete('lastName');\r\n    this.cookies.delete('email');\r\n    this.cookies.delete('picUrl');\r\n    this.cookies.delete('isLoggedIn');\r\n    this.userId = undefined;\r\n    this.firstName = undefined;\r\n    this.lastName = undefined;\r\n    this._email = undefined;\r\n    this.picUrl = undefined;\r\n    this.isLoggedIn = false;\r\n  }\r\n\r\n  registerAccount(param: Object) {\r\n    return this.http.post(this.apiUrl + 'register.do', param);\r\n  }\r\n\r\n\r\n  // this function will update the user profile in User Table\r\n  updateAccount(userObj: object, password: string) {\r\n    return this.http.post(this.apiUrl + 'updateAccount.do', userObj, {\r\n      params: { password },\r\n    });\r\n  }\r\n\r\n  updateAccountWithPassword2(param: Object) { // with image\r\n    const userID = param['userId'];\r\n    const fname = param['fname'];\r\n    const lname = param['lname'];\r\n    const email = param['email'];\r\n    const password = param['password'];\r\n    const somePic = param['somePic'];\r\n    return this.http.post(this.apiUrl + 'updateAccount4.do', null, {\r\n      params: {\r\n        userID,\r\n        fname,\r\n        lname,\r\n        email,\r\n        password,\r\n        somePic\r\n      },\r\n    });\r\n  }\r\n\r\n  searchUser(searchText: string): Observable<string> {\r\n    const url = this.apiUrl + 'search.do?search-text=' + searchText;\r\n    return this.http.get(url).pipe(map(resp => resp as string));\r\n  }\r\n\r\n  resetPassword(inputEmail: string) {\r\n    return this.http.post(this.apiUrl + 'reset.do', null, {\r\n      params: {\r\n        inputEmail\r\n      }\r\n    });\r\n  }\r\n\r\n  getUserInfo(someID: string) {\r\n    return this.http.post(this.apiUrl + 'getUser.do', null, {\r\n      params: {\r\n        someID\r\n      }\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}